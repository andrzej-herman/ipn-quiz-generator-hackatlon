@inject IQuizGeneratorService QuizGeneratorService
@inject IJSRuntime IJS

@if (Questions != null)
{
    <div class="row mt-4">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <RadzenButton ButtonStyle="ButtonStyle.Info" Size="ButtonSize.Large" class="w-100" Click="GenerujPDF">Generuj Quiz jako plik PDF</RadzenButton>
        </div>
    </div>
    foreach (var q in Questions)
    {
            <div class="row mt-5" style="font-size: 18px!important">
                <div class="col-lg-3 col-md-3 col-sm-12">
                    Numer pytania: @q.DisplayNumber
                </div>
                <div class="col-lg-9 col-md-9 col-sm-12">
                    <div>@((MarkupString)q.QuestionBody)</div>
                    <div class="mt-2">Prawidłowa odpowiedź: <b>@((MarkupString)q.CorrectAnswer)</b></div>
                </div>
            </div>
            <hr />
    }
}

@code {

    [Parameter]
    public IEnumerable<QuestionDto>? Questions { get; set; }

    async Task GenerujPDF()
    {
        var bytes = await QuizGeneratorService.GenerateAsync(Questions!.ToArray());
        await IJS.InvokeVoidAsync("saveByteArray", "Quiz.pdf", bytes);
    }
}
